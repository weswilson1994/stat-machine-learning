library(DBI)
library(DBI)
con <- dbConnect(dbdir = "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/query?where=1%3D1&outFields=*&outSR=4326&f=json")
library(tidyverse)
# Define the API endpoint
api_url <- "https://opendata.dc.gov/datasets/DCGIS::stop-data/data"
# Parse the JSON response
data <- fromJSON(content(GET(api_url), "text"))
library(httr)
library(jsonlite)
# Parse the JSON response
data <- fromJSON(content(GET(api_url), "text"))
# Define the API endpoint
api_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/query?where=1%3D1&outFields=*&outSR=4326&f=json"
# Parse the JSON response
data <- fromJSON(content(GET(api_url), "text"))
View(data)
library(httr2)
view(data$features)
second_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41"
data2 <- fromJSON(content(GET(second_url), "text"))
second_url <- "https://opendata.dc.gov/datasets/DCGIS::stop-data/explore"
# Parse the JSON response
data <- fromJSON(content(GET(api_url), "text"))
data <- fromJSON(content(GET(second_url), "text"))
second_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41"
data2 <- fromJSON(content(GET(second_url), as = "text"))
data$features %>% nrow()
req <- request(api_url)
req %>%
req_dry_run()
req$options
req %>%
req_url_query(MaxRecordCount = 30000) %>%
req_dry_run()
req %>%
req_url_query(MaxRecordCount = 30000) %>%
req_perform
test <- req %>%
req_url_query(MaxRecordCount = 30000) %>%
req_perform
test %>% class()
dplyr::glimpse(test)
resp_body_json(test)
resp_body_json(test) %>% length()
resp_body_json(test) %>% nrow()
test <- req %>%
req_url_query(MaxRecordCount = 30000) %>%
req_url_query(f = "json") %>%
req_perform
dplyr::glimpse(test)
resp_body_json(test)
resp_body_json(test) %>% dplyr::glimpse()
resp_body_json(test) %>%
as.data.frame()
test <- req %>%
req_url_query(MaxRecordCount = 30000) %>%
req_perform
test <- req %>%
req_url_query(MaxRecordCount = 30000) %>%
req_perform()
test <- req %>%
req_url_query(resultOffset = 2000) %>%
req_perform()
resp_body_json(test)
# Define the API endpoint
api_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/"
req <- request(api_url)
req <- request(api_url)
test <- req %>%
req_url_query(resultOffset = 2000) %>%
req_url_query(resultRecordCount = 2000)
# Define the API endpoint
api_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41"
req <- request(api_url)
test <- req %>%
req_url_query(resultOffset = 2000) %>%
req_url_query(resultRecordCount = 2000)
# Define the API endpoint
api_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/query?outFields=*&where=1%3D1"
req <- request(api_url)
test <- req %>%
req_url_query(resultOffset = 2000) %>%
req_url_query(resultRecordCount = 2000)
dplyr::glimpse(test)
resp_body_json(test)
# Define the API endpoint
api_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/query?where=1%3D1&text=&objectIds=&time=&timeRelation=esriTimeRelationOverlaps&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&distance=&units=esriSRUnit_Foot&relationParam=&outFields=*&returnGeometry=true&returnTrueCurves=false&maxAllowableOffset=&geometryPrecision=&outSR=&havingClause=&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&historicMoment=&returnDistinctValues=false&resultOffset=&resultRecordCount=30000&returnExtentOnly=false&sqlFormat=none&datumTransformation=&parameterValues=&rangeValues=&quantizationParameters=&featureEncoding=esriDefault&f=pjson"
req <- request(api_url)
test <- req %>%
req_url_query(resultOffset = 2000) %>%
req_url_query(resultRecordCount = 2000) %>%
req_perform()
resp_body_json(test)
# Parse the JSON response
data <- fromJSON(content(GET(api_url), "text"))
data$exceededTransferLimit
req <- request(api_url)
test <- req %>%
req_url_query(resultOffset = 2000) %>%
req_url_query(resultRecordCount = 2000) %>%
req_perform()
dplyr::glimpse(test)
# Define the API endpoint
api_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/query?where=1%3D1&outFields=*&outSR=4326&f=json"
req <- request(api_url)
# Define the API endpoint
api_url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/query?where=1%3D1&outFields=*&outSR=4326&f=json"
req <- request(api_url)
test <- req %>%
req_url_query(resultRecordCount = 30000) %>%
req_perform()
dplyr::glimpse(test)
fromJSON(test$body)
fromJSON(test)
fromJSON(test, "text")
dplyr::glimpse(test)
resp_body_json(test)
test <- req %>%
req_url_query(resultRecordCount = 30000) %>%
req_url_query(resultOffset = 30000) %>%
req_perform()
dplyr::glimpse(test)
resp_body_json(test)
print(api_url)
response <- GET(api_url, query = list(resultRecordCount = 30000))
data <- fromJSON(content(response, "text"))
view(data)
data <- fromJSON(content(response, "text"))
view(data)
View(data)
url <- "https://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Public_Safety_WebMercator/MapServer/41/query?where=1%3D1&outFields=*&outSR=4326&f=json"
# readme
## Police Interactions in D.C.
The accompanying data cover all MPD stops including vehicle, pedestrian, bicycle, and harbor stops for the period from January 1, 2023 to June 30, 2023. A stop may involve a ticket (actual or warning), investigatory stop, protective pat down, search, or arrest.
Learn more about the data here: https://opendata.dc.gov/datasets/DCGIS::stop-data/about
Learn more about the data here: https://opendata.dc.gov/datasets/DCGIS::stop-data/about
